name: Docker Image-CI / EC2-CD Pipeline
# This GitHub Actions workflow builds a Docker image for a Node.js application,

on:
  push:
    branches: [ "main" ]
     paths:
      - 'passwordGen/**'
      - '.github/workflows/docker-ci-cd.yml'
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: ["ubuntu-latest"]


    steps:
    - name: Check Files
      run: ls -l
      
    - name: Check for Dockerfile
      run: ls -la ./Dockerfile

    - name: Repository Checkout 
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME  }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./passwordGen
        file: ./passwordGen/Dockerfile 
        push: true
        tags: autobot26/node-apps:{{ github.sha }}
        # cache-from: type=registry,ref=autobot26/node-apps:cache
        # cache-to: type=registry,ref=autobot26/node-apps:cache,mode=max
    
    - name: Execute remote SSH commands using password and Deploy to EC2
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USERNAME }}
        password: ${{ secrets.AWS_EC2_PASSWORD }}
        script: |
          # Stop the existing Docker container if it exists
          docker stop my-node-app || true
          docker rm my-node-app || true

          # Pull the latest image from Docker Hub
          docker pull autobot26/node-apps:{{ github.sha }}

          # Run the new Docker container
          docker run -d --name my-node-app -p 5173:5173 autobot26/node-apps:{{ github.sha }}
    
    # - name: Deploy to EC2
    #   uses: einaregilsson/ecs-deploy@v2
    #   with:
    #     cluster: my-ecs-cluster
    #     service: my-ecs-service
    #     task-definition: my-task-definition
    #     container-name: my-container-name
    #     image: autobot26/node-apps:{{ github.sha }}
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: us-west-2  # Change to your preferred region